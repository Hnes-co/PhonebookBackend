{"version":3,"sources":["services/PersonList.js","components/Filter.js","components/PersonForm.js","components/Person.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Filter","props","value","filter","onChange","handleFilter","PersonForm","onSubmit","addName","newName","handleNameInput","newNumber","handleNumberInput","type","Person","person","delperson","name","number","onClick","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","PersonService","initialPersons","PersonsToShow","toLowerCase","includes","event","target","preventDefault","nameObject","map","setTimeout","returnedPerson","concat","personToRemove","find","p","window","confirm","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46a6bb6a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteName = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\n\r\nexport default { getAll, create, update, deleteName }","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            filter shown with <input value={props.filter} onChange={props.handleFilter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.addName}>\r\n            <div> name: <input value={props.newName} onChange={props.handleNameInput}/> </div>\r\n            <div> number: <input value={props.newNumber} onChange={props.handleNumberInput}/> </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, delperson }) => {\r\n    \r\n    return (\r\n        <div>\r\n            {person.name} {person.number}\r\n            <button onClick={delperson} >delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Person","import React, { useState, useEffect } from 'react'\r\nimport PersonService from './services/PersonList'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Person from './components/Person'\r\nimport './index.css'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    PersonService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const nameObject = {\r\n        name: newName,\r\n        number: newNumber\r\n    }\r\n    let tempPersons = persons.map(person => person.name.toLowerCase())\r\n    if(tempPersons.includes(newName.toLowerCase()))\r\n    {\r\n      setMessage(\r\n        `${newName} is already added to phonebook`\r\n      )\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    }\r\n    else if(!newName || !newNumber)\r\n    {\r\n      setMessage(\r\n        `name or number cannot be empty`\r\n      )\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    }\r\n    else\r\n    {\r\n      PersonService\r\n        .create(nameObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage(\r\n            `${returnedPerson.name} added to phonebook`\r\n          )\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })\r\n    }\r\n    \r\n  }\r\n\r\n  const removePerson = (id) => {\r\n    const personToRemove = persons.find(p => p.id === id)\r\n    if(window.confirm(`Delete ${personToRemove.name} ?`))\r\n    {\r\n      setPersons(persons.filter(p => p.id !== id))\r\n      setMessage(\r\n        `${personToRemove.name} removed from phonebook`\r\n      )\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n      PersonService\r\n        .deleteName(id)\r\n    }\r\n  }\r\n  \r\n\r\n  const handleNameInput = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberInput = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleFilter = (event) => {\r\n      setFilter(event.target.value)\r\n  }\r\n  const PersonsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter filter={filter} handleFilter={handleFilter} />\r\n      <h2>Add new</h2>\r\n      <PersonForm addName={addName} newName={newName} handleNameInput={handleNameInput} \r\n                    newNumber={newNumber} handleNumberInput={handleNumberInput} />\r\n      <h2>Numbers</h2>\r\n      {PersonsToShow.map(person =>\r\n         <Person key={person.id} person={person} \r\n         delperson={() => removePerson(person.id)} />)}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}